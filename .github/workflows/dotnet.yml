# Do not edit this file. It is generated from dotnet.yml.j2.

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:

permissions:
  packages: read
  contents: write

jobs:
  runtime:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ppc64le, s390x]
        isV6:
        - ${{ startsWith(github.ref, 'refs/tags/v6.') }}
        exclude:
        - arch: ppc64le
          isV6: true
    steps:
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Prepare
      run: ./dotnet-prepare runtime
    - name: Build
      run: ARCH=${{ matrix.arch }} ./docker/run-image ghcr.io/ibm/dotnet-${{ matrix.arch }}-toolchain:latest ./dotnet-build runtime
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v4
      with:
        name: runtime-${{ matrix.arch }}
        path: |
          local-downloads/
          local-packages/
          output/
  msbuild:
    needs: runtime
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ppc64le, s390x]
        isV6:
        - ${{ startsWith(github.ref, 'refs/tags/v6.') }}
        exclude:
        - arch: ppc64le
          isV6: true
    steps:
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Download the previous stage's artifacts
      uses: actions/download-artifact@v4
      with:
        name: runtime-${{ matrix.arch }}
    - name: Prepare
      run: ./dotnet-prepare msbuild
    - name: Build
      run: ARCH=${{ matrix.arch }} ./docker/run-image ghcr.io/ibm/dotnet-${{ matrix.arch }}-toolchain:latest ./dotnet-build msbuild
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v4
      with:
        name: msbuild-${{ matrix.arch }}
        path: |
          local-downloads/
          local-packages/
          output/
  roslyn:
    needs: msbuild
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ppc64le, s390x]
        isV6:
        - ${{ startsWith(github.ref, 'refs/tags/v6.') }}
        exclude:
        - arch: ppc64le
          isV6: true
    steps:
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Download the previous stage's artifacts
      uses: actions/download-artifact@v4
      with:
        name: msbuild-${{ matrix.arch }}
    - name: Prepare
      run: ./dotnet-prepare roslyn
    - name: Build
      run: ARCH=${{ matrix.arch }} ./docker/run-image ghcr.io/ibm/dotnet-${{ matrix.arch }}-toolchain:latest ./dotnet-build roslyn
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v4
      with:
        name: roslyn-${{ matrix.arch }}
        path: |
          local-downloads/
          local-packages/
          output/
  aspnetcore:
    needs: roslyn
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ppc64le, s390x]
        isV6:
        - ${{ startsWith(github.ref, 'refs/tags/v6.') }}
        exclude:
        - arch: ppc64le
          isV6: true
    steps:
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Download the previous stage's artifacts
      uses: actions/download-artifact@v4
      with:
        name: roslyn-${{ matrix.arch }}
    - name: Prepare
      run: ./dotnet-prepare aspnetcore
    - name: Build
      run: ARCH=${{ matrix.arch }} ./docker/run-image ghcr.io/ibm/dotnet-${{ matrix.arch }}-toolchain:latest ./dotnet-build aspnetcore
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v4
      with:
        name: aspnetcore-${{ matrix.arch }}
        path: |
          local-downloads/
          local-packages/
          output/
  sdk:
    needs: aspnetcore
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [ppc64le, s390x]
        isV6:
        - ${{ startsWith(github.ref, 'refs/tags/v6.') }}
        exclude:
        - arch: ppc64le
          isV6: true
    steps:
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Download the previous stage's artifacts
      uses: actions/download-artifact@v4
      with:
        name: aspnetcore-${{ matrix.arch }}
    - name: Prepare
      run: ./dotnet-prepare sdk
    - name: Build
      run: ARCH=${{ matrix.arch }} ./docker/run-image ghcr.io/ibm/dotnet-${{ matrix.arch }}-toolchain:latest ./dotnet-build sdk
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v4
      with:
        name: sdk-${{ matrix.arch }}
        path: |
          local-downloads/
          local-packages/
          output/
  release:
    needs: sdk
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64]
    if: ${{ github.event_name == 'push' && github.ref_type == 'tag' }}
    steps:
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Download the ppc64le sdk artifacts
      uses: actions/download-artifact@v4
      with:
        name: sdk-ppc64le
      if: ${{ !startsWith(github.ref, 'refs/tags/v6.') }}
    - name: Download the s390x sdk artifacts
      uses: actions/download-artifact@v4
      with:
        name: sdk-s390x
    - name: Create a release
      run: gh release create --notes "" "${{ github.ref_name }}" output/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
