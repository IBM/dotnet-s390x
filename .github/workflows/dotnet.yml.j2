{#-
Workflow template. Regenerate the workflow using the ./update script.
-#}

# Do not edit this file. It is generated from dotnet.yml.j2.

on:
  push:
    branches:
    - main
    tags:
    - 'v.*'
  pull_request:

{%- set projects = ['runtime', 'msbuild', 'roslyn', 'sdk', 'aspnetcore', 'installer'] %}

{%- set matrix -%}
    strategy:
      matrix:
        # TODO: aspnetcore build fails on x64 with:
        # EXEC : error : Failed to load assembly 'System.Private.CoreLib'
        arch: [ppc64le, s390x]
{%- endset %}

{%- set container -%}
    container:
      image: ghcr.io/ibm/dotnet-{% raw %}${{ matrix.arch }}{% endraw %}-toolchain:latest
      credentials:
         username: {% raw %}${{ secrets.GHCR_USERNAME }}{% endraw %}
         password: {% raw %}${{ secrets.GHCR_PASSWORD }}{% endraw %}
      # Workaround for the following:
      # fatal: detected dubious ownership in repository at '/__w/dotnet-s390x/dotnet-s390x'
      options: --user root
{%- endset %}

{%- set checkout_steps -%}
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout
      uses: actions/checkout@v1  # Newer versions are not compatible with Ubuntu 18.04
    - name: Fix the repository ownership
      run: chown -R "$(id -u):$(id -g)" .
{%- endset %}

jobs:
{%- for i in range(projects | length) %}
  {{ projects[i] }}:
    {%- if i != 0 %}
    needs: {{ projects[i - 1] }}
    {%- endif %}
    runs-on: ubuntu-latest
    {{ matrix }}
    {{ container }}
    steps:
    {{ checkout_steps }}
    {%- if i != 0 %}
    - name: Download the previous stage's artifacts
      uses: actions/download-artifact@v3  # Newer versions are not compatible with Ubuntu 18.04
      with:
        name: {{ projects[i - 1] }}-{% raw %}${{ matrix.arch }}{% endraw %}
    {%- endif %}
    - name: Prepare
      run: ./dotnet-prepare {{ projects[i] }}
    - name: Build
      run: ARCH={% raw %}${{ matrix.arch }}{% endraw %} ./dotnet-build {{ projects[i] }}
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v3  # Newer versions are not compatible with Ubuntu 18.04
      with:
        name: {{ projects[i] }}-{% raw %}${{ matrix.arch }}{% endraw %}
        path: |
          {%- if projects[i] != 'installer' %}
          local-downloads/
          local-packages/
          {%- endif %}
          output/
{%- endfor %}
  release:
    needs: installer
    runs-on: ubuntu-latest
    if: {% raw %}${{ github.event_name == 'push' && github.ref_type == 'tag' }}{% endraw %}
    {{ matrix }}
    {{ container }}
    steps:
    {{ checkout_steps }}
    - name: Download the installer artifacts
      uses: actions/download-artifact@v3  # Newer versions are not compatible with Ubuntu 18.04
      with:
        name: installer-{% raw %}${{ matrix.arch }}{% endraw %}
    - name: Create a release
      run: gh release create --notes "" "{% raw %}${{ github.ref_name }}{% endraw %}" output/*
      env:
        GH_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
