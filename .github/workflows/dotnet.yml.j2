{#-
Workflow template. Regenerate the workflow using the ./update script.
-#}

# Do not edit this file. It is generated from dotnet.yml.j2.

on:
  push:
    branches:
    - main
    tags:
    - 'v*'
  pull_request:

permissions:
  packages: read
  contents: write

{#-
TODO: aspnetcore build fails on x64 with:
EXEC : error : Failed to load assembly 'System.Private.CoreLib'
-#}
{%- set arches = ['ppc64le', 's390x'] %}

{%- set projects = ['runtime', 'msbuild', 'roslyn', 'aspnetcore', 'sdk'] %}

{%- set matrix -%}
    strategy:
      matrix:
        arch: [{{ ', '.join(arches) }}]
        isV6:
        - {% raw %}${{ startsWith(github.ref, 'refs/tags/v6.') }}{% endraw %}
        exclude:
        - arch: ppc64le
          isV6: true
{%- endset %}

{%- set image -%}ghcr.io/ibm/dotnet-{% raw %}${{ matrix.arch }}{% endraw %}-toolchain:latest{%- endset %}

{%- set init_steps -%}
    - name: Show free disk space
      run: df -h
    - name: Free some disk space
      run: rm -r /opt/hostedtoolcache
    - name: Show free disk space
      run: df -h
    - name: Configure git
      run: git config --global user.email iii@linux.ibm.com &&
           git config --global user.name "dotnet-s390x bot"
    - name: Checkout dotnet-s390x
      uses: actions/checkout@v4
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: {% raw %}${{ github.actor }}{% endraw %}
        password: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
{%- endset %}

jobs:
{%- for i in range(projects | length) %}
  {{ projects[i] }}:
    {%- if i != 0 %}
    needs: {{ projects[i - 1] }}
    {%- endif %}
    runs-on: ubuntu-latest
    {{ matrix }}
    steps:
    {{ init_steps }}
    {%- if i != 0 %}
    - name: Download the previous stage's artifacts
      uses: actions/download-artifact@v4
      with:
        name: {{ projects[i - 1] }}-{% raw %}${{ matrix.arch }}{% endraw %}
    {%- endif %}
    - name: Prepare
      run: ./dotnet-prepare {{ projects[i] }}
    - name: Build
      run: ARCH={% raw %}${{ matrix.arch }}{% endraw %} ./docker/run-image {{ image }} ./dotnet-build {{ projects[i] }}
    - name: Upload the intermediate results
      uses: actions/upload-artifact@v4
      with:
        name: {{ projects[i] }}-{% raw %}${{ matrix.arch }}{% endraw %}
        path: |
          local-downloads/
          local-packages/
          output/
{%- endfor %}
  release:
    needs: sdk
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64]
    if: {% raw %}${{ github.event_name == 'push' && github.ref_type == 'tag' }}{% endraw %}
    steps:
    {{ init_steps }}
    {%- for arch in arches %}
    - name: Download the {{ arch }} sdk artifacts
      uses: actions/download-artifact@v4
      with:
        name: sdk-{{ arch }}
    {%- if arch == 'ppc64le' %}
      if: {% raw %}${{ !startsWith(github.ref, 'refs/tags/v6.') }}{% endraw %}
    {%- endif %}
    {%- endfor %}
    - name: Create a release
      run: gh release create --notes "" "{% raw %}${{ github.ref_name }}{% endraw %}" output/*
      env:
        GH_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
