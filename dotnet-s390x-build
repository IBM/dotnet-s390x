#!/bin/bash
set -e

BASEDIR=`pwd`
NUGET="mono ${BASEDIR}/nuget.exe"
PACKAGESDIR=${BASEDIR}/local-packages
DOWNLOADDIR=${BASEDIR}/local-downloads
OUTPUTDIR=${BASEDIR}/output

rm -rf ~/.nuget
rm -rf ~/.local/share/NuGet/
rm -rf ${PACKAGESDIR}
mkdir ${PACKAGESDIR}
rm -rf ${DOWNLOADDIR}
mkdir ${DOWNLOADDIR}
rm -rf ${OUTPUTDIR}
mkdir ${OUTPUTDIR}

RUNTIME_CONF=Release
RUNTIME_VERSION_PREFIX=6.0.0
RUNTIME_VERSION_SUFFIX=rtm.21522.10
RUNTIME_VERSION=${RUNTIME_VERSION_PREFIX}
RUNTIME_VERSION_NONSHIPPING=${RUNTIME_VERSION_PREFIX}-${RUNTIME_VERSION_SUFFIX}
pushd runtime
ROOTFS_DIR=/ ./build.sh -arch s390x -c ${RUNTIME_CONF} -cross -clang
${NUGET} add artifacts/packages/${RUNTIME_CONF}/Shipping/Microsoft.NETCore.App.Host.linux-s390x.${RUNTIME_VERSION}.nupkg -Source ${PACKAGESDIR}
${NUGET} add artifacts/packages/${RUNTIME_CONF}/Shipping/Microsoft.NETCore.App.Runtime.linux-s390x.${RUNTIME_VERSION}.nupkg -Source ${PACKAGESDIR}
mkdir -p ${DOWNLOADDIR}/Runtime/${RUNTIME_VERSION_NONSHIPPING}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/dotnet-runtime-${RUNTIME_VERSION}-linux-s390x.tar.gz ${DOWNLOADDIR}/Runtime/${RUNTIME_VERSION_NONSHIPPING}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/dotnet-runtime-${RUNTIME_VERSION}-linux-s390x.tar.gz ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/Microsoft.NETCore.App.Host.linux-s390x.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/Microsoft.NETCore.App.Runtime.linux-s390x.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/runtime.linux-s390x.Microsoft.NETCore.DotNetHost.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/runtime.linux-s390x.Microsoft.NETCore.DotNetHostPolicy.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/runtime.linux-s390x.Microsoft.NETCore.DotNetHostResolver.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/runtime.linux-s390x.Microsoft.NETCore.ILAsm.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
cp artifacts/packages/${RUNTIME_CONF}/Shipping/runtime.linux-s390x.Microsoft.NETCore.ILDAsm.${RUNTIME_VERSION}.nupkg ${OUTPUTDIR}
popd

pushd roslyn
./eng/build.sh --restore --build --pack -c Release /p:VersionSuffix=6.21526.21
for I in artifacts/packages/Release/*/*.nupkg; do ${NUGET} add $I -Source ${PACKAGESDIR}; done
popd

SDK_CONF=Release
SDK_VERSION_PREFIX=6.0.100
SDK_VERSION_SUFFIX=rtm.21527.8
SDK_VERSION=${SDK_VERSION_PREFIX}-${SDK_VERSION_SUFFIX}
pushd sdk
./build.sh --pack -c ${SDK_CONF} /p:Architecture=s390x /p:VersionSuffix=${SDK_VERSION_SUFFIX}
mkdir -p ${DOWNLOADDIR}/Sdk/${SDK_VERSION}
cp artifacts/packages/Release/NonShipping/dotnet-toolset-internal-${SDK_VERSION}.zip ${DOWNLOADDIR}/Sdk/${SDK_VERSION}
popd

ASPNETCORE_CONF=Release
ASPNETCORE_VERSION_PREFIX=6.0.0
ASPNETCORE_VERSION_SUFFIX=rtm.21526.8
ASPNETCORE_VERSION=${ASPNETCORE_VERSION_PREFIX}
ASPNETCORE_VERSION_NONSHIPPING=${ASPNETCORE_VERSION_PREFIX}-${ASPNETCORE_VERSION_SUFFIX}
pushd aspnetcore
# Run build script multiple times to work around yarn race condition
./eng/build.sh -arch s390x -c ${ASPNETCORE_CONF} --pack /p:DotNetAssetRootUrl=file://${DOWNLOADDIR}/ || { sleep 30 ; \
./eng/build.sh -arch s390x -c ${ASPNETCORE_CONF} --pack /p:DotNetAssetRootUrl=file://${DOWNLOADDIR}/ || { sleep 30 ; \
./eng/build.sh -arch s390x -c ${ASPNETCORE_CONF} --pack /p:DotNetAssetRootUrl=file://${DOWNLOADDIR}/ ; } }
${NUGET} add artifacts/packages/${ASPNETCORE_CONF}/Shipping/Microsoft.AspNetCore.App.Runtime.linux-s390x.${ASPNETCORE_VERSION}.nupkg -Source ${PACKAGESDIR}
mkdir -p ${DOWNLOADDIR}/aspnetcore/Runtime/${ASPNETCORE_VERSION_NONSHIPPING}
cp artifacts/installers/${ASPNETCORE_CONF}/aspnetcore-runtime-internal-${ASPNETCORE_VERSION}-linux-s390x.tar.gz ${DOWNLOADDIR}/aspnetcore/Runtime/${ASPNETCORE_VERSION_NONSHIPPING}
cp artifacts/installers/${ASPNETCORE_CONF}/aspnetcore_base_runtime.version ${DOWNLOADDIR}/aspnetcore/Runtime/${ASPNETCORE_VERSION_NONSHIPPING}
cp artifacts/packages/${ASPNETCORE_CONF}/Shipping/Microsoft.AspNetCore.App.Runtime.linux-s390x.${ASPNETCORE_VERSION}.nupkg ${OUTPUTDIR}
popd

INSTALLER_CONF=Release
INSTALLER_VERSION=6.0.100
pushd installer
rm -rf artifacts
# Setting HostRid to linux- instead of ubuntu- avoids requiring Debian installer packages
./build.sh -c ${INSTALLER_CONF} /p:HostRid=linux-x64 /p:Architecture=s390x /p:CoreSetupBlobRootUrl=file://${DOWNLOADDIR}/ /p:DotnetToolsetBlobRootUrl=file://${DOWNLOADDIR}/
cp artifacts/packages/${INSTALLER_CONF}/Shipping/dotnet-sdk-${INSTALLER_VERSION}-linux-s390x.tar.gz ${OUTPUTDIR}
popd

