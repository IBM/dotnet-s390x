#!/bin/bash
set -e -u -x
cd "$(dirname "$0")"
if [ $# -gt 0 ]; then
    installer_version=$1
    shift
fi
git submodule update --init --recursive
cd installer
if [[ -z ${installer_version+x} ]]; then
    git fetch
    installer_sha_version=$(curl -L https://aka.ms/dotnet/7.0.1xx/daily/productCommit-linux-x64.txt | grep ^installer: | cut -d: -f2)
    installer_sha=$(echo "$installer_sha_version" | cut -d, -f1)
    installer_version=$(echo "$installer_sha_version" | awk -F", " '{print $2}')
else
    git fetch --tags
    installer_sha=v$installer_version
fi
installer_version_prefix=$(echo "$installer_version" | cut -d- -f1)
installer_version_suffix=$(echo "$installer_version" | cut -d- -f2- -s)
git checkout "$installer_sha"
repos=(
    runtime:Microsoft.NETCore.App.Ref
    msbuild:Microsoft.Build
    sdk:Microsoft.NET.Sdk
    aspnetcore:Microsoft.AspNetCore.App.Ref
)
cd ..
echo "installer_version_prefix=$installer_version_prefix" >dotnet-s390x-versions
echo "installer_version_suffix=$installer_version_suffix" >>dotnet-s390x-versions
git add installer
for repo in "${repos[@]}"; do
    IFS=: read -r -a path_name <<< "$repo"
    cd "${path_name[0]}"
    git fetch
    xpath="/Dependencies/ProductDependencies/Dependency[@Name=\"${path_name[1]}\"]/Sha/text()"
    sha=$(xmllint --xpath "$xpath" ../installer/eng/Version.Details.xml)
    git checkout "$sha"
    xpath="string(/Dependencies/ProductDependencies/Dependency[@Name=\"${path_name[1]}\"]/@Version)"
    version=$(xmllint --xpath "$xpath" ../installer/eng/Version.Details.xml)
    cd ..
    git add "${path_name[0]}"
    version_prefix=$(echo "$version" | cut -d- -f1)
    echo "${path_name[0]}_version_prefix=$version_prefix" >>dotnet-s390x-versions
    version_suffix=$(echo "$version" | cut -d- -f2- -s)
    echo "${path_name[0]}_version_suffix=$version_suffix" >>dotnet-s390x-versions
done
git add dotnet-s390x-versions
git commit -m "Update to v$installer_version"
