#!/bin/bash
set -e -u -x
cd "$(dirname "$0")"

function echo_version {
    local name=$1
    local version=$2

    echo "${name}_version=$version"
    version_prefix=$(echo "$version" | cut -d- -f1)
    echo "${name}_version_prefix=$version_prefix"
    version_suffix=$(echo "$version" | cut -d- -f2- -s)
    echo "${name}_version_suffix=$version_suffix"
    major_version=$(echo "$version_prefix" | cut -d. -f1)
    echo "${name}_major_version=$major_version"
    minor_version=$(echo "$version_prefix" | cut -d. -f2)
    echo "${name}_minor_version=$minor_version"
}

function echo_property {
    local name=$1
    local path=$2
    local property=$3

    value=$(xmllint --xpath "/Project/PropertyGroup/${property}/text()" "$path")
    # shellcheck disable=SC2016
    if [ "${value:0:2}" = '$(' ] && [ "${value:${#value} - 1}" = ')' ]; then
        echo_property "$name" "$path" "${value:2:-1}"
    else
        echo "$name=$value"
    fi
}

if [ $# -gt 0 ]; then
    installer_version=$1
    shift
fi
git submodule update --init --recursive
cd installer
if [[ -z ${installer_version+x} ]]; then
    url=https://aka.ms/dotnet/7.0.1xx/daily/productCommit-linux-x64.txt
else
    url=https://dotnetbuilds.azureedge.net/public/Sdk/$installer_version/productCommit-linux-x64.txt
fi
installer_sha_version=$(curl -L "$url" | grep ^installer: | cut -d: -f2)
installer_sha=$(echo "$installer_sha_version" | cut -d, -f1)
installer_version=$(echo "$installer_sha_version" | awk -F", " '{print $2}')
git fetch
git checkout --force "$installer_sha"
repos=(
    runtime:Microsoft.NETCore.App.Ref:true
    msbuild:Microsoft.Build:true
    roslyn:Microsoft.Net.Compilers.Toolset:true
    sdk:Microsoft.NET.Sdk:true
    aspnetcore:Microsoft.AspNetCore.App.Ref:true
    aspnetcore_internal:Microsoft.AspNetCore.App.Ref.Internal:false
)
cd ..
echo_version installer "$installer_version" >dotnet-s390x-versions
git add installer
for repo in "${repos[@]}"; do
    IFS=: read -r -a path_name <<< "$repo"
    xpath="string(/Dependencies/ProductDependencies/Dependency[@Name=\"${path_name[1]}\"]/@Version)"
    version=$(xmllint --xpath "$xpath" installer/eng/Version.Details.xml)
    if "${path_name[2]}"; then
        cd "${path_name[0]}"
        git fetch
        xpath="/Dependencies/ProductDependencies/Dependency[@Name=\"${path_name[1]}\"]/Sha/text()"
        sha=$(xmllint --xpath "$xpath" ../installer/eng/Version.Details.xml)
        git checkout --force "$sha"
        cd ..
        git add "${path_name[0]}"
    fi
    echo_version "${path_name[0]}" "$version" >>dotnet-s390x-versions
done

{
    echo_property \
        aspnetcore_transport_version \
        aspnetcore/eng/Versions.props \
        MicrosoftNETCoreBrowserDebugHostTransportVersion

    echo_property \
        aspnetcore_runtime_version \
        aspnetcore/eng/Versions.props \
        MicrosoftNETCoreAppRuntimeVersion

    echo_property \
        runtime_version_label \
        runtime/eng/Versions.props \
        PreReleaseVersionLabel
} >>dotnet-s390x-versions

git add dotnet-s390x-versions
git commit -m "Update to v$installer_version"
git tag "v$installer_version"
