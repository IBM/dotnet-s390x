#!/bin/bash
set -e -u -x
cd "$(dirname "$0")"
if [ $# -gt 0 ]; then
    installer_version=$1
    shift
fi
git submodule update --init --recursive
cd installer
if [[ -z ${installer_version+x} ]]; then
    url=https://aka.ms/dotnet/7.0.1xx/daily/productCommit-linux-x64.txt
else
    url=https://dotnetbuilds.azureedge.net/public/Sdk/$installer_version/productCommit-linux-x64.txt
fi
installer_sha_version=$(curl -L "$url" | grep ^installer: | cut -d: -f2)
installer_sha=$(echo "$installer_sha_version" | cut -d, -f1)
installer_version=$(echo "$installer_sha_version" | awk -F", " '{print $2}')
installer_version_prefix=$(echo "$installer_version" | cut -d- -f1)
installer_version_suffix=$(echo "$installer_version" | cut -d- -f2- -s)
git fetch
git checkout --force "$installer_sha"
repos=(
    runtime:Microsoft.NETCore.App.Ref:true
    msbuild:Microsoft.Build:true
    roslyn:Microsoft.Net.Compilers.Toolset:true
    sdk:Microsoft.NET.Sdk:true
    aspnetcore:Microsoft.AspNetCore.App.Ref:true
    aspnetcore_internal:Microsoft.AspNetCore.App.Ref.Internal:false
)
cd ..
echo "installer_version_prefix=$installer_version_prefix" >dotnet-s390x-versions
echo "installer_version_suffix=$installer_version_suffix" >>dotnet-s390x-versions
git add installer
for repo in "${repos[@]}"; do
    IFS=: read -r -a path_name <<< "$repo"
    xpath="string(/Dependencies/ProductDependencies/Dependency[@Name=\"${path_name[1]}\"]/@Version)"
    version=$(xmllint --xpath "$xpath" installer/eng/Version.Details.xml)
    if "${path_name[2]}"; then
        cd "${path_name[0]}"
        git fetch
        xpath="/Dependencies/ProductDependencies/Dependency[@Name=\"${path_name[1]}\"]/Sha/text()"
        sha=$(xmllint --xpath "$xpath" ../installer/eng/Version.Details.xml)
        git checkout --force "$sha"
        cd ..
        git add "${path_name[0]}"
    fi
    echo "${path_name[0]}_version=$version" >>dotnet-s390x-versions
    version_prefix=$(echo "$version" | cut -d- -f1)
    echo "${path_name[0]}_version_prefix=$version_prefix" >>dotnet-s390x-versions
    version_suffix=$(echo "$version" | cut -d- -f2- -s)
    echo "${path_name[0]}_version_suffix=$version_suffix" >>dotnet-s390x-versions
    major_version=$(echo "$version_prefix" | cut -d. -f1)
    echo "${path_name[0]}_major_version=$major_version" >>dotnet-s390x-versions
    minor_version=$(echo "$version_prefix" | cut -d. -f2)
    echo "${path_name[0]}_minor_version=$minor_version" >>dotnet-s390x-versions
done
xpath="/Project/PropertyGroup/MicrosoftNETCoreBrowserDebugHostTransportVersion/text()"
runtime_download_version=$(xmllint --xpath "$xpath" aspnetcore/eng/Versions.props)
echo "runtime_download_version=$runtime_download_version" >>dotnet-s390x-versions
xpath="/Project/PropertyGroup/PreReleaseVersionLabel/text()"
runtime_version_label=$(xmllint --xpath "$xpath" runtime/eng/Versions.props)
echo "runtime_version_label=$runtime_version_label" >>dotnet-s390x-versions
git add dotnet-s390x-versions
git commit -m "Update to v$installer_version"
git tag "v$installer_version"
